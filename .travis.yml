language: cpp
compiler:
  - gcc
  - clang
os: linux
dist: trusty
env: MATRIX_EVAL="echo default"
# https://github.com/travis-ci/travis-ci/issues/6633

jobs:
  fast_finish: true
  include:
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env: MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-8
          packages:
            - clang-8 lldb-8 lld-8
      env: MATRIX_EVAL="CC=clang-8 && CXX=clang++-8"

    - os: osx
      osx_image: xcode12
      env: MATRIX_EVAL="CC=clang && CXX=clang++"

    - stage: Docker
      services: docker
      env: MATRIX_EVAL="echo docker"  # to not match allow_failures
      before_install: skip
      install: skip
      before_script: skip
      script:
        - docker-compose -f docker/docker-compose.yml build
        - docker run tsenit/mimkl bash -c "command -v python"
        - docker run tsenit/mimkl python --version
        - docker run tsenit/mimkl python -c "import pymimkl"
        - docker run tsenit/mimkl python -m unittest discover mimkl/python/pymimkl/tests
        - docker run -w /workspace/mimkl tsenit/mimkl python setup.py test
        - docker run -w /workspace/mimkl/build_ tsenit/mimkl make test CTEST_OUTPUT_ON_FAILURE=TRUE
      deploy:
        provider: script
        skip_cleanup: true
        script: sh .travis/deploy.sh
        on:
          branch: master
              
  allow_failures:
    - env: MATRIX_EVAL="echo default"
    - env: MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
    - env: MATRIX_EVAL="CC=clang-8 && CXX=clang++-8"

before_install:
  - echo $TRAVIS_OS_NAME
  - eval "${MATRIX_EVAL}"

install:
  # https://docs.anaconda.com/docs_oss/conda/travis
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh ;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh ;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  - conda create -q -n test-environment python=3.6 numpy scipy pip
  - source activate test-environment

before_script:
  - git submodule init
  - git submodule update
  - $CXX --version
  - command -v python
  - python --version

script:
  - $CXX --version
  - CMAKE_C_COMPILER=$CC CMAKE_CXX_COMPILER=$CXX pip install -e . --verbose
  - python -c "import pymimkl"
  - python -m unittest discover python/pymimkl/tests
  - python setup.py test
  - cd build_; make test CTEST_OUTPUT_ON_FAILURE=TRUE


